*modes.nvim* Prismatic line decorations for the adventurous vim user
*Modes*

MIT License Copyright (c) mvllow

==============================================================================

Features:

- Highlight UI elements based on the current mode.

Manage module status:

- |Modes.enable()|
- |Modes.disable()|
- |Modes.toggle()|

# Setup ~

Modes setup can be called with your `config` table to modify default
behaviour.

See |Modes.config| for `config` options and default values.

------------------------------------------------------------------------------
                                                                 *Modes.setup()*
                            `Modes.setup`({config})
Module setup

Parameters ~
{config} `(table|nil)` Module config table. See |Modes.config|.

Usage ~
`require('modes').setup({})` (replace `{}` with your `config` table)

------------------------------------------------------------------------------
                                                                  *Modes.config*
                                 `Modes.config`
Module config

Default values:
>lua
  Modes.config = {
  	copy = { enable = true, color = nil, opacity = 0.15 },
  	delete = { enable = true, color = nil, opacity = 0.15 },
  	insert = { enable = true, color = nil, opacity = 0.15 },
  	replace = { enable = true, color = nil, opacity = 0.15 },
  	visual = { enable = true, color = nil, opacity = 0.15 },
  	ui = {
  		cursor = true,
  		cursorline = true,
  		modemsg = true,
  		number = true,
  		signcolumn = true,
  	},
  	-- Unlisted buffers are ignored by default
  	ignore_filetypes = {},
  }
<

 vim:tw=78:ts=8:noet:ft=help:norl: